@model IEnumerable<Capstone4.Models.GetContractorActiveRequestsViewModel>

@{
    ViewBag.Title = "GetContractorActiveRequests";
}

<h2>My Active Requests</h2>

<div>
    <strong>Toggle column: </strong><a class="toggle-vis" data-column="0">Service Number</a> - <a class="toggle-vis" data-column="1">Homeowner</a> - <a class="toggle-vis" data-column="2">Full Address</a> - <a class="toggle-vis" data-column="3">Description</a> - <a class="toggle-vis" data-column="4">Price</a> - <a class="toggle-vis" data-column="5">Posted Date</a> - <a class="toggle-vis" data-column="6">Completion Deadline</a> - <a class="toggle-vis" data-column="7">Completion Date</a>  
</div>
<br />
<div><button id="cutSelectedButton">Cut selected row</button><button id="cropSelectedButton">Crop selected row</button><button id="refresh">Refresh</button></div>
<br />
<table class="table" id="homeTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Invoice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Homeowner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FullAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompletionDeadline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompletionDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeLeft)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Invoice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Homeowner)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompletionDeadline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompletionDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeLeft)
                </td>
                @*<td><button id="but1" type="button" class="btn btn-info btn-sm removeRow">Remove this row</button></td>*@
                <td>
                    @Html.ActionLink("Details", "Details", "ServiceRequests", new { id = item.ID }, null) |
                    @Html.ActionLink("Confirm Completion", "ConfirmCompletionView", "ServiceRequests", new { id = item.ID }, null)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Expired)
                </td>
            </tr>
        }
    </tbody>

</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <link href="~/Content/DataTables.css" media="all" rel="stylesheet" type="text/css" />
    <link href="~/Content/ResponsiveDatatables.css" media="all" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/DataTables.js" type="text/javascript"></script>
    <script src="~/Scripts/ResponiveDataTables.js" type="text/javascript"></script>
    <style>
        tr.highlight {
        font-weight: bold;
        color: red;
    }
    </style>

    @*<style>
        tr.highlight {
        font-weight: bold;
        background-color: yellow !important;
    }
    </style>

    <style>
        .selected td {
           background-color: #acbad4 !important; /* Add !important to make sure override datables base styles */
         }  
    </style>*@

    <script>
        $.extend(true, $.fn.dataTable.defaults, {
            "columnDefs": [
                { "orderable": false, "targets": 8 },
                { "orderable": false, "targets": 9 },
                     {
                         "targets": [9],
                         "visible": false,
                         "searchable": false
                     }
            ]
        });

        $(function () {
            var isMouseDown = false,
              isSelected;
            $("#homeTable tr")
              .mousedown(function () {
                  isMouseDown = true;
                  $(this).toggleClass("selected");
                  isSelected = $(this).hasClass("selected");
                  return false; // prevent text selection
              })
              .mouseover(function () {
                  if (isMouseDown) {
                      $(this).toggleClass("selected", isSelected);
                  }
              })
              .bind("selectstart", function () {
                  return false;
              })

            $(document)
              .mouseup(function () {
                  isMouseDown = false;
              });
        });

        //$(document).on("click", ".removeRow", function () {
        //    var table = $('#homeTable').DataTable();
        //    var row;
        //    console.log($(this).closest('table'));
        //    if ($(this).closest('table').hasClass("collapsed") && ($(".dtr-data").length > 1)) {
        //        var child = $(this).parents("tr.child");
        //        row = $(child).siblings(".parent");
        //    } else {
        //        row = $(this).parents('tr');
        //    }

        //    table.row(row).remove().draw();

        //});

        $(document).ready(function () {
            var table = $('#homeTable').DataTable({
                scrollY: "500px",
                //scrollX: true,
                responsive: true,
                scrollCollapse: true,
                paging: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                createdRow: function (row, data, dataIndex) {
                    if (data[9] == "True") {
                        $(row).addClass('highlight');
                    }

                }
            });

            $('a.toggle-vis').on('click', function (e) {
                e.preventDefault();

                // Get the column API object
                var column = table.column($(this).attr('data-column'));

                // Toggle the visibility
                column.visible(!column.visible());
            });
            $('#cutSelectedButton').click(function () {
                table.rows('.selected').remove().draw();
            });
            $('#cropSelectedButton').click(function () {
                table.$('tr').toggleClass('selected');
                table.rows('.selected').remove().draw();
            });

            $('#refresh').click(function () {
                location.reload(true);
            });

        });

    </script>


}
