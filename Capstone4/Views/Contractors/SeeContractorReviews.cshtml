@model Capstone4.Models.SeeContractorReviewViewModel

@{
    ViewBag.Title = "SeeContractorReviews";
}

<h2>@Html.DisplayFor(model => model.ContractorUsername)'s Reviews</h2>

<dl>
    
    <hr />
    <dl class="dl-horizontal">
       
        <dt>
            @Html.DisplayNameFor(model => model.OverallRating)
        </dt>

        <dd>
            @{double score = Model.OverallRating; }
            <input id="input-id" type="number" value="@score" class="rating" data-size="lg" name="OverallRating" data-readonly="true" data-show-clear="false">
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TotalRatings)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TotalRatings)
        </dd>
    </dl>
    <div>
        <strong>Toggle column: </strong><a class="toggle-vis" data-column="0">Rating</a> - <a class="toggle-vis" data-column="1">Review</a> - <a class="toggle-vis" data-column="2">Review Date</a> - <a class="toggle-vis" data-column="3">Reviewed by</a>
    </div>
    <br />
    <div><button id="cutSelectedButton">Cut selected row</button><button id="cropSelectedButton">Crop selected row</button><button id="refresh">Refresh</button></div>
    <br />
        <table class="table" id="homeTable" >
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Rating)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Review)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ReviewDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.HomeownerUsername)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ServiceRequests)
            {
                    <tr>

                        <td>
                            <input id="input-id" type="number" value="@item.ContractorReview.Rating" class="rating" data-size="xs" name="Rating" data-readonly="true" data-show-clear="false">
                            <div style="display: none;">@item.ContractorReview.Rating</div>
                        </td>

                        <td>
                            @item.ContractorReview.Review
                        </td>

                        <td>
                            @item.ContractorReview.ReviewDate
                        </td>

                        <td>
                            @item.Homeowner.Username
                        </td>

                    </tr>
                }
                </tbody>
        </table>
    <hr>
</dl>
<p>
   
    @Html.ActionLink("Back to List", "ReviewsIndex")
</p>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<link href="http://netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.css" rel="stylesheet">
<link href="~/Content/ResponsiveDatatables.css" media="all" rel="stylesheet" type="text/css" />
<link href="~/Content/star-rating.css" media="all" rel="stylesheet" type="text/css" />
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.js"></script>
<script src="~/Scripts/star-rating.js" type="text/javascript"></script>
<link href="~/Content/theme-krajee-svg.css" media="all" rel="stylesheet" type="text/css" />
<script src="~/Scripts/theme-krajee-svg.js"></script>
<link href="~/Content/DataTables.css" media="all" rel="stylesheet" type="text/css" />
<script src="~/Scripts/DataTables.js" type="text/javascript"></script>
<script src="~/Scripts/ResponiveDataTables.js" type="text/javascript"></script>
<script>

        $.extend(true, $.fn.dataTable.defaults, {
            "columnDefs": [
                { "orderable": false, "targets": 1 }
            ]
        });


        $(function () {
            var isMouseDown = false,
              isSelected;
            $("#homeTable tr")
              .mousedown(function () {
                  isMouseDown = true;
                  $(this).toggleClass("selected");
                  isSelected = $(this).hasClass("selected");
                  return false; // prevent text selection
              })
              .mouseover(function () {
                  if (isMouseDown) {
                      $(this).toggleClass("selected", isSelected);
                  }
              })
              .bind("selectstart", function () {
                  return false;
              })

            $(document)
              .mouseup(function () {
                  isMouseDown = false;
              });
        });

        $(document).ready(function () {
            var table = $('#homeTable').DataTable({
                scrollY: "500px",
                //scrollX: true,
                responsive: true,
                scrollCollapse: true,
                paging: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]]


            });

            $('a.toggle-vis').on('click', function (e) {
                e.preventDefault();

                // Get the column API object
                var column = table.column($(this).attr('data-column'));

                // Toggle the visibility
                column.visible(!column.visible());
            });
            $('#cutSelectedButton').click(function () {
                table.rows('.selected').remove().draw();
            });
            $('#cropSelectedButton').click(function () {
                table.$('tr').toggleClass('selected');
                table.rows('.selected').remove().draw();
            });

            $('#refresh').click(function () {
                location.reload(true);
            });

        });
</script>

}