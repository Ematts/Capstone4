@model Capstone4.Models.ServiceRequest

@{
    ViewBag.Title = "Create";
    
}

<h2>Create</h2>

@using (Html.BeginForm("CreateRequest", "ServiceRequests", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "requestForm" })) 
{
    @Html.AntiForgeryToken()
    <head>
        <link href="~/Content/auto.css" media="all" rel="stylesheet" type="text/css" />
    </head>

    <div class="form-horizontal">
        <h4>ServiceRequest</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Homeowner.Username)
        @Html.HiddenFor(model => model.Timezone)
        <input id="checkStreet" name="checkStreet" type="hidden" value="" />
        <input id="checkCity" name="checkCity" type="hidden" value="" />
        <input id="checkState" name="checkState" type="hidden" value="" />
        <input id="UTCDate" name="UTCDate" type="hidden" value="" />
        <input id="AmbigTime" name="AmbigTime" type="hidden" value="" />
        <input id="Proceed" name="checkState" type="hidden" value="" />


        <br />
        <table id="address" style="display:none">
            <tr>
                <td class="label">Street address</td>
                <td class="slimField">
                    <input class="field" id="street_number" name="number" disabled="true"></input>
                </td>
                <td class="wideField" colspan="2">
                    <input class="field" id="route" name="street_name" disabled="true"></input>
                </td>


            </tr>
            <tr>
                <td class="label">City</td>
                <td class="wideField" colspan="3">
                    <input class="field" id="locality" name="Address.City1"
                           disabled="true"></input>
                </td>
            </tr>
            <tr>
                <td class="label">State</td>
                <td class="slimField">
                    <input class="field"
                           id="administrative_area_level_1" name="Address.State1" disabled="true"></input>
                </td>
                <td class="label">Zip code</td>
                <td class="wideField">
                    <input class="field" id="postal_code" name="Address.Zip1"
                           disabled="true"></input>
                </td>
            </tr>
            <tr>
                <td class="label">Country</td>
                <td class="wideField" colspan="3">
                    <input class="field"
                           id="country" disabled="true"></input>
                </td>
            </tr>
        </table>

        <input type="hidden" id="Street">
        <br />

        <div id="divProcessing">
            <p>Processing, please wait . . . <img src="../../Content/ajax-loader.gif"></p>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2" for="autocomplete">Address locator</label>
            <div id="locationField" class="col-md-10" spellcheck="false">
                @Html.TextBox("autocomplete",Model.Homeowner.Address.FullAddress, new { @class = "form-control" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.Street, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompletionDeadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompletionDeadline, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompletionDeadline, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="vac">
            @Html.LabelFor(model => model.Address.vacant, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Address.vacant, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.vacant, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="valid">
            @Html.LabelFor(model => model.Address.validated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Address.validated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.validated, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="inactive">
            @Html.LabelFor(model => model.Inactive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Inactive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Inactive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Post!" id="submitRequest" class="btn btn-default" />
            </div>
        </div>
      
        
        <input type="file" accept="image/*" style="display: none" id="fileInput" name="files" multiple><br />

        <label for="fileInput" style="background-color: #A9A9A9" class="btn btn-default">
            Browse Files
        </label>

        <div id="max">
        
            <p><font color="red">Maximum of 4 files reached!</font></p>
        
        </div>
        

        <div class="picList">
            <div id="dropbox" style="border:1px solid black;height:135px;overflow: auto;">
                 Drop Here
            </div>
        </div>


        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="http://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css" />

<style type="text/css">
    #dropbox img {
        width: 200px;
        height: 133px;
        text-align: justify;
        float: left;
        display: inline-block;
        margin-bottom:10px;
     }
 </style>

    <script>
        $(document).ready(function(){

            $("#Price").val("");
            $("#CompletionDeadline").val("");

        })
    </script>
    <script>
            $(document).ready(function () {
                $("#divProcessing").hide();
                $("#vac").hide();
                $("#valid").hide();
                $("#inactive").hide();
                $("#max").hide();
            })
    </script>
    <script src="~/Scripts/Validator.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            if(window.FileReader != null){
                $('#single').hide();
                $('.single').prop('disabled', true);
            } else {
                $('#multiple').hide();
                $('.multiple').prop('disabled', true);
            }
        });
    </script>
    <script>
        $(document).ready(function(){

        $("#street_number").change(function(){
        $("#Street").val($("#street_number").val() + " " + $("#route").val());
        })
            $("#route").change(function(){
            $("#Street").val($("#street_number").val() + " " + $("#route").val());
        })

     })
    </script>
    <script>
        $(document).ready(function(){

        $("#street_number").change(function(){
        $("#Address_Street").val($("#street_number").val() + " " + $("#route").val());
        })
            $("#route").change(function(){
            $("#Address_Street").val($("#street_number").val() + " " + $("#route").val());
        })

     })
     </script>
<script>

    $("#Address_Street").change(function () {
        document.getElementById("checkStreet").value = document.getElementById("Address_Street").value;
    });
    $("#Address_City").change(function () {
        document.getElementById("checkCity").value = document.getElementById("Address_City").value;
    });
    $("#Address_State").change(function () {
        document.getElementById("checkState").value = document.getElementById("Address_State").value;
    });
</script>

<script>
    $(document).on("dialogopen", ".ui-dialog", function (event, ui) {
        fluidDialog();
        standardTime = document.getElementById("standardTime");
        DaylightTime = document.getElementById("DaylightSavingsTime");
        if (standardTime != null) {
            standardTime.addEventListener("change", switchTimeStand, false);
        }
        if (DaylightTime != null) {
            DaylightTime.addEventListener("change", switchTimeDay, false);
        }
    });

    function switchTimeStand() {
        var stand = document.getElementById("standardTime");
        var day = document.getElementById("DaylightSavingsTime");
 
        if (stand.checked == true) {
            $("#DaylightSavingsTime").prop("checked", false);
        }
        if (stand.checked == false) {
            $("#DaylightSavingsTime").prop("checked", true);
        }
    }

    function switchTimeDay() {
        var stand = document.getElementById("standardTime");
        var day = document.getElementById("DaylightSavingsTime");
        if (day.checked == true) {
            $("#standardTime").prop("checked", false);
        }
        if (day.checked == false) {
            $("#standardTime").prop("checked", true);
        }

    }


    function fluidDialog() {
        var $visible = $(".ui-dialog:visible");
        // each open dialog
        $visible.each(function () {
            var $this = $(this);
            var dialog = $this.find(".ui-dialog-content").data("ui-dialog");
            // if fluid option == true
            if (dialog.options.fluid) {
                var wWidth = $(window).width();
                // check window width against dialog width
                if (wWidth < (parseInt(dialog.options.maxWidth) + 50)) {
                    // keep dialog from filling entire screen
                    $this.css("max-width", "90%");
                } else {
                    // fix maxWidth bug
                    $this.css("max-width", dialog.options.maxWidth + "px");
                }
                //reposition dialog
                dialog.option("position", dialog.options.position);
            }
        });

    }
    $(function () {
        $('#CompletionDeadline').rules().remote.complete = function (xhr) {
            if (xhr.status == 200 && xhr.responseText === 'true') {
                var id = xhr.getResponseHeader('X-ID');
                var proceed = xhr.getResponseHeader('Continue');
                document.getElementById("Timezone").value = id;
                document.getElementById("Proceed").value = proceed;

            }
            if (xhr.status == 200 && xhr.responseText !== 'true') {
                var id = xhr.getResponseHeader('Z-ID');
                var StandardId = xhr.getResponseHeader('Standard-ID');
                var DSTID = xhr.getResponseHeader('DST-ID');
                if (id == "ambigError") {
                    var titleMsg = "You have entered an ambiguous time.";
                    var div = $('<div></div>');
                    var outputMsg = "Please select time";
                    div.html(outputMsg + '<form id="myform" action=""><input type="checkbox"   id="standardTime" name="standardTime" checked="checked" />Standard Time<br /><input type="checkbox" id="DaylightSavingsTime" name="DaylightSavingsTime" value=""/>Daylight Savings Time</form>').dialog({
                        title: titleMsg,
                        height: 'auto',
                        width: 'auto',
                        maxWidth: 600,
                        fluid: true,
                        autoOpen: true,
                        resizable: true,
                        close: function (event, ui) {
                            var stand = document.getElementById("standardTime");
                            var day = document.getElementById("DaylightSavingsTime");
                            if (day.checked == true) {
                                document.getElementById("UTCDate").value = DSTID;
                                document.getElementById("AmbigTime").value = "--(Daylight Savings Time is in effect for this service request)";
                                $('#CompletionDeadline').removeData('previousValue');
                                $('#CompletionDeadline').valid();

                            };

                            if (stand.checked == true) {
                                document.getElementById("AmbigTime").value = "--(Daylight Savings Time is NOT in effect for this service request)";
                                document.getElementById("UTCDate").value = StandardId;
                                $('#CompletionDeadline').removeData('previousValue');
                                $('#CompletionDeadline').valid();
                            }

                            $(this).dialog('destroy');
                        },
                        modal: true,
                        buttons: {
                            "CLOSE":
                        function () {
                            var stand = document.getElementById("standardTime");
                            var day = document.getElementById("DaylightSavingsTime");
                            if (day.checked == true) {
                                document.getElementById("UTCDate").value = DSTID;
                                document.getElementById("AmbigTime").value = "--(Daylight Savings Time is in effect for this service request)";
                                $('#CompletionDeadline').removeData('previousValue');
                                $('#CompletionDeadline').valid();

                            };

                            if (stand.checked == true) {
                                document.getElementById("UTCDate").value = StandardId;
                                document.getElementById("AmbigTime").value = "--(Daylight Savings Time is NOT in effect for this service request)";
                                $('#CompletionDeadline').removeData('previousValue');
                                $('#CompletionDeadline').valid();
                            }
                            $(this).dialog('destroy');
                        }
                        }
                    })
                    
                }
            }
        };
    });
    
</script>
    <script>
        $("#Address_Street").change(function () {
            if ($("#UTCDate").val() != "") {
                document.getElementById("UTCDate").value = "";
            }
            if ($("#AmbigTime").val() != "") {
                document.getElementById("AmbigTime").value = "";
            }
            if ($("#Proceed").val() != "") {
                document.getElementById("Proceed").value = "";
            }
            if ($("#CompletionDeadline").val() != "") {
                $('#CompletionDeadline').removeData('previousValue');
                $('#CompletionDeadline').valid();
            }
        });
        $("#Address_City").change(function () {
            if ($("#UTCDate").val() != "") {
                document.getElementById("UTCDate").value = "";
            }
            if ($("#AmbigTime").val() != "") {
                document.getElementById("AmbigTime").value = "";
            }
            if ($("#Proceed").val() != "") {
                document.getElementById("Proceed").value = "";
            }
            if ($("#CompletionDeadline").val() != "") {
                $('#CompletionDeadline').removeData('previousValue');
                $('#CompletionDeadline').valid();
            }
        });
        $("#Address_State").change(function () {
            if ($("#UTCDate").val() != "") {
                document.getElementById("UTCDate").value = "";
            }
            if ($("#AmbigTime").val() != "") {
                document.getElementById("AmbigTime").value = "";
            }
            if ($("#Proceed").val() != "") {
                document.getElementById("Proceed").value = "";
            }
            if ($("#CompletionDeadline").val() != "") {
                $('#CompletionDeadline').removeData('previousValue');
                $('#CompletionDeadline').valid();
            }
        });
        $("#CompletionDeadline").change(function () {
            if ($("#AmbigTime").val() != "") {
                document.getElementById("AmbigTime").value = "";
            }
            if ($("#UTCDate").val() != "") {
                document.getElementById("UTCDate").value = "";
            }
            if ($("#Proceed").val() != "") {
                document.getElementById("Proceed").value = "";
            }
        });
    </script>
    
<script>
        (function ($) {
            $.validator.setDefaults({
                onkeyup: function (element, event) {
                    if ($(element).attr('data-val-remote-url')) {
                        return false;
                    }
                    if (event.which === 9 && this.elementValue(element) === "") {
                        return;
                    } else if (element.name in this.submitted || element === this.lastElement) {
                        this.element(element);
                    }

                }
            })
        }(jQuery));
</script>
       

    <script src="~/Scripts/auto.js"></script> 
    @{string source = System.IO.File.ReadAllText(@"C:\Users\erick\Desktop\Credentials\auto.txt");}
    <script src="@source"
            async defer></script>
    

}