@model Capstone4.Models.ServiceRequest

@{
    ViewBag.Title = "PaymentView";
}

<h2>Pay Contractor</h2>

<div>
    <h4>Service Request</h4>
    <hr />
@using (Html.BeginForm("Unlock", "ServiceRequests", null, FormMethod.Post, new { id = "UnlockForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)

}
    @{string service = Model.Description + " Service# = " + Model.Service_Number; }
<form action="https://www.sandbox.paypal.com/webapps/adaptivepayment/flow/pay" target="PPDGFrame" id="payment" class="standard">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    <input type="image" id="submitBtn" value="Pay with PayPal" src="https://www.paypalobjects.com/en_US/i/btn/btn_paynowCC_LG.gif">
    <input id="type" type="hidden" name="expType" value="mini">
    <input id="paykey" type="hidden" name="paykey" value=@ViewData["paykey"]>
</form>
@*<script src="https://www.paypalobjects.com/js/external/dg.js">
</script>*@
    <script src="https://www.paypalobjects.com/js/external/apdg.js">
    </script>

@*<script>
  var dgFlow = new PAYPAL.apps.DGFlow({ trigger: 'submitBtn' });
</script>*@
    <script>
        var returnFromPayPal = function () {
            getDetails();
            function getDetails() {
                var formdata = new FormData();
                var other_data = $('#payment').serializeArray();
                $.each(other_data, function (key, input) {
                    formdata.append(input.name, input.value);
                });
                $.ajax({
                    type: 'POST',
                    dataType: 'json',
                    cache: false,
                    url: "/ServiceRequests/getDetails",
                    processData: false,
                    contentType: false,
                    data: formdata,
                    success: function (response, textStatus, jqXHR) {
                        if (response.success == "go") {
                            window.location = "http://86da92ec.ngrok.io/ServiceRequests/PayPalSuccess/" + response.id;
                        }
                        if (response.success == "stay") {
                            console.log("payment attempt cancelled")
                        }
                        if (response.success == "fail") {
                            window.location = "http://86da92ec.ngrok.io/ServiceRequests/PaymentFailure/" + response.id;
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Error - ' + errorThrown);
                    },
                })
            }
       
        }
        var dgFlowMini = new PAYPAL.apps.DGFlowMini({ trigger: 'submitBtn', expType: 'mini', callbackFunction: 'returnFromPayPal' });
    </script>
    <dl class="dl-horizontal">
        @Html.HiddenFor(model => model.ID)
 
        <dt>
            @Html.DisplayNameFor(model => model.Homeowner.Username)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Homeowner.Username)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contractor.Username)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contractor.Username)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Address.Street)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address.Street)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Address.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address.Zip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address.Zip)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PostedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PostedDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CompletionDeadline)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CompletionDeadline)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CompletionDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CompletionDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Service_Number)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Service_Number)
        </dd>

    </dl>
    <strong>Service Request Photos:</strong>
    <br> <br>

    <div class="photocontainer">
        @foreach (var item in Model.ServiceRequestFilePaths)
        {


            <img class="img" data-url="~/images/@item.FileName" src="~/images/@item.FileName" alt="Service Request Photo" width="200" height="133" />


        }

        <div>
            <strong>Contractor Photos:</strong>
            <br> <br>

            @foreach (var item in Model.CompletedServiceRequestFilePaths)
            {


                <img class="img" data-url="~/images/@item.FileName" src="~/images/@item.FileName" alt="Contractor Photo" width="200" height="133" />


            }
        </div>
    </div>
    <br> <br />
</div>


<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script src="~/Scripts/jquerypic.js" type="text/javascript"></script>
<script src="~/Scripts/PhotoNumbering.js" type="text/javascript"></script>

<script>

    $(".photocontainer").imageBox();

 </script>

    <script>
        $(document).on("click", "#submitBtn", function () {
            var formdata = new FormData();
            var other_data = $('#UnlockForm').serializeArray();
            $.each(other_data, function (key, input) {
                formdata.append(input.name, input.value);
            });
            $.ajax({
                type: 'POST',
                dataType: 'json',
                cache: false,
                url: "/ServiceRequests/Unlock",
                processData: false,
                contentType: false,
                data: formdata,
                success: function (response, textStatus, jqXHR) {
                    console.log(response.success)
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error - ' + errorThrown);
                },
            })
        })
    </script>

}


@*<script>
        $(document).on("click", "#submitBtn", function () {
            //var formdata = new FormData();
            //var other_data = $('#UnlockForm').serializeArray();
            //$.each(other_data, function (key, input) {
            //    formdata.append(input.name, input.value);
            //});
            var token = $('input[name="__RequestVerificationToken"]').val();
            var tokenadr = $('form[action="/Account/LogOff"] input[name="__RequestVerificationToken"]').val();
            var headers = {};
            var headersadr = {};
            headers['__RequestVerificationToken'] = token;
            headersadr['__RequestVerificationToken'] = tokenadr;
            var myID = $("#ID").val();
            $.ajax({
                type: "POST",
                headers: headersadr,
                url: "/ServiceRequests/Unlock",
                data: JSON.stringify({ __RequestVerificationToken: token, ID: myID }),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response, textStatus, jqXHR) {
                    console.log(response.success)
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error - ' + errorThrown);
                },
            })
        })
</script>*@